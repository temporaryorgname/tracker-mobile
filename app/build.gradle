apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.gladed.androidgitversion'

apply from: '../spotless.gradle'

android {
    compileSdkVersion kau.targetSdk

    androidGitVersion {
        codeFormat = 'MMNNPPXX'
        format = '%tag%%-count%%-commit%'
        prefix 'v'
    }

    defaultConfig {
        applicationId "com.temporaryorgname.tracker"
        minSdkVersion kau.minSdk
        targetSdkVersion kau.targetSdk
        versionCode androidGitVersion.code()
        versionName androidGitVersion.name()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${project.APP_ID}-${variant.buildType.name}.apk"
        }
    }

    def releaseKeystoreFile = file('../files/release.keystore')
    def releasePropFile = file('../files/release.properties')
    def withReleaseSigning = releaseKeystoreFile.exists() && releasePropFile.exists()

    signingConfigs {

        debug {
            storeFile file("../files/debug.keystore")
            storePassword "debugkey"
            keyAlias "debugkey"
            keyPassword "debugkey"
        }

        if (withReleaseSigning) {
            def releaseProps = new Properties()
            releasePropFile.withInputStream { releaseProps.load(it) }

            release {
                storeFile releaseKeystoreFile
                storePassword releaseProps.getProperty('storePassword')
                keyAlias releaseProps.getProperty('keyAlias')
                keyPassword releaseProps.getProperty('keyPassword')
            }
        }

    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            shrinkResources true
            if (withReleaseSigning) signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        warningsAsErrors true
        xmlReport false
        textReport true
        textOutput 'stdout'
        disable 'UnusedResources',
                'ContentDescription',
                'RtlSymmetry',
                'MissingTranslation',
                'Autofill'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    packagingOptions {
        pickFirst 'META-INF/library_release.kotlin_module'
        pickFirst 'META-INF/retrofit.kotlin_module'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions.unitTests {
        includeAndroidResources = true
        // Don't throw runtime exceptions for android calls that are not mocked
        returnDefaultValues = true

        // Always show the result of every unit test, even if it passes.
        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardError'
            }
        }
    }

    androidExtensions {
        experimental = true
    }
}

repositories {
    google()
    jcenter()
    maven { url "https://jitpack.io" }
}

dependencies {
    androidTestImplementation kauDependency.kotlinTest
    androidTestImplementation kauDependency.espresso
    androidTestImplementation kauDependency.testRules
    androidTestImplementation kauDependency.testRunner

    testImplementation kauDependency.kotlinTest
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:${KOTLIN}"
    testImplementation kauDependency.junit

    implementation "org.jetbrains.kotlin:kotlin-stdlib:${KOTLIN}"

    //noinspection GradleDependency
    implementation "ca.allanwang.kau:core:$KAU"
    //noinspection GradleDependency
    implementation "ca.allanwang.kau:core-ui:$KAU"
    //noinspection GradleDependency
    implementation "ca.allanwang.kau:mediapicker:$KAU"

    implementation "androidx.core:core-ktx:${KTX}"

    //noinspection GradleDependency
    implementation "ca.allanwang.kit:retrofit:$KIT"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${COROUTINES}"

}
